Question 1 - 

async function inc(x){
    x = x + await 1;
    return  x;
} 

async function increment(x){
    x = x + 1;
    return x;
}

inc(1)
.then(function(x){
    increment(x)
    .then(function(x){
        console.log(x);
    })
})

Output = 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Question 2
let p = new Promise(function(resolve,reject){
    reject(new Error("some error"));
    setTimeout(function(){
        reject(new Error("some error11"));
    },1000)
    reject(new Error("some error1"))
}) 

p.then(null,function(err){
    console.log(1);
    console.log(err);

})
.catch(function(err){
    console.log(2);
    console.log(err);
})

Output - 
//1 
//Error: some error
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Question -3
async function f1(){
    console.log(1);
}

async function f1(){
    console.log(2);
}
 

console.log(3);
f1();
console.log(1);
f2();

async function f2(){
    console.log("Go!");
}

output 
3
2
1 
Go
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
what is ()() in js

When you see ()() in JavaScript code, it typically indicates that a function is being called immediately after it is defined or returned. This is known as an immediately-invoked function expression (IIFE). An IIFE is a function expression that is defined and executed immediately after it is created, without being assigned to a variable or being named. It is commonly used to create a private scope for variables and functions, preventing them from polluting the global scope.

############
(function() {
  // Code to be executed immediately
})();

##############
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Question -4 

function resolveAfterNSeconds(n,x){
    return  new Promise(resolve =>{
        setTimeout(()=>{
            resolve(x);
        },n)
    })


}

(function(){
    let a = resolveAfterNSeconds(1000,1)

    a.then(async function(x){
        let y = await resolveAfterNSeconds(2000,2)
        let z = await resolveAfterNSeconds(1000,3)
        let p = resolveAfterNSeconds(2000,4)
        let q = resolveAfterNSeconds(1000,5)
        console.log(x+y+z+await p + await q);
    })
})()

//Total time - 1 + 2 + 1 + 2 = 6
// output - 1+ 2 + 3 + 4 + 5 = 15

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
var a = 10;
console.log('Line number 2',a);
function fn(){
    console.log('line nuber 4',a)
    var a = 20;
    a++;
    console.log("line number 7",a);
    if(a){
        var a = 30;
        a++;
        console.log("line number 11",a);
    }
    console.log("line number 13",a)
}

fn();
console.log("line number 2",a);


//10
//undined  
//21

//31
///31
//10

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
let letFruit = "orange";
var varFruit = "orange";
console.log("leftFruit",letFruit, "varFruit",varFruit)
{
    let letFruit = "apple";
    var varFruit = "apple";
    console.log("leftFruit",letFruit,"varFruit",varFruit)

}
console.log("leftFruit",letFruit, "varFruit",varFruit)

//leftFruit orange  varFruit orange
//leftFruit apple   varFruit apple
//leftFruit orange  varFruit apple
